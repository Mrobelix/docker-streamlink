---
# This is a basic workflow to help you get started with Actions
name: Build and Push Docker Image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ gha-init ]
  pull_request:
    branches: [ gha-init ]
  schedule:
    # Triggers the workflow monthly to keep image fresh with upstream base images
    - cron: '0 12 1 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      -
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        name: Checkout
        uses: actions/checkout@v2
      -
        # Set up QEMU and Buildx so we can build multiple platforms later
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1.2.0
      -
        # BuildKit (used with `docker buildx`) is the best way to build images
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        # Login to DockerHub
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        # Login to GitHub Core Registry
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        # List of Docker Images to use as Basename for Tags
        name: Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v3.3.0
        with:
          # list of Docker images to use as base name for tags
          images: |
            mrobelix/streamlink
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest
      -
        # this will build the amd64 images, then push to both DockerHub and GHCR
        name: Docker Build and Push
        id: docker_build_and_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}